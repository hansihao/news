<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.nciae.system.mapper.SysMenuMapper">
    <resultMap id="BaseResultMap" type="edu.nciae.system.domain.SysMenu">
        <id column="menu_id" jdbcType="INTEGER" property="menuId"/>
        <result column="menu_name" jdbcType="VARCHAR" property="menuName"/>
        <result column="menu_key" jdbcType="VARCHAR" property="menuKey"/>
        <result column="component" jdbcType="VARCHAR" property="component"/>
        <result column="parent_id" jdbcType="INTEGER" property="parentId"/>
        <result column="target" jdbcType="VARCHAR" property="target"/>
        <result column="order_num" jdbcType="INTEGER" property="orderNum"/>
        <result column="menu_type" jdbcType="CHAR" property="menuType"/>
        <result column="visible" jdbcType="CHAR" property="visible"/>
        <result column="perms" jdbcType="VARCHAR" property="perms"/>
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>

    <sql id="selectMenuVo">
		select menu_id, menu_name, parent_id,target, order_num, menu_type, menu_key,
		component, visible, ifnull(perms,'') as perms, icon, create_by,
		create_time
		from sys_menu
	</sql>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_menu
    where menu_id = #{menuId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="edu.nciae.system.domain.SysMenu">
        <selectKey keyProperty="menuId" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into sys_menu (menu_name, menu_key, component,
        parent_id, target, order_num,
        menu_type, visible, perms,
        icon, create_by, create_time,
        update_by, update_time, remark
        )
        values (#{menuName,jdbcType=VARCHAR}, #{menuKey,jdbcType=VARCHAR}, #{component,jdbcType=VARCHAR},
        #{parentId,jdbcType=INTEGER}, #{target,jdbcType=VARCHAR}, #{orderNum,jdbcType=INTEGER},
        #{menuType,jdbcType=CHAR}, #{visible,jdbcType=CHAR}, #{perms,jdbcType=VARCHAR},
        #{icon,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
        )
    </insert>
    <update id="updateByPrimaryKey" parameterType="edu.nciae.system.domain.SysMenu">
    update sys_menu
    set menu_name = #{menuName,jdbcType=VARCHAR},
      menu_key = #{menuKey,jdbcType=VARCHAR},
      component = #{component,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      target = #{target,jdbcType=VARCHAR},
      order_num = #{orderNum,jdbcType=INTEGER},
      menu_type = #{menuType,jdbcType=CHAR},
      visible = #{visible,jdbcType=CHAR},
      perms = #{perms,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where menu_id = #{menuId,jdbcType=INTEGER}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select menu_id, menu_name, menu_key, component, parent_id, target, order_num, menu_type, 
    visible, perms, icon, create_by, create_time, update_by, update_time, remark
    from sys_menu
    where menu_id = #{menuId,jdbcType=INTEGER}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select menu_id, menu_name, menu_key, component, parent_id, target, order_num, menu_type, 
    visible, perms, icon, create_by, create_time, update_by, update_time, remark
    from sys_menu
  </select>
    <select id="selectPermsByUserId" parameterType="Integer"
            resultType="String">
		select distinct m.perms
		from sys_menu m
		left join sys_role_menu rm on m.menu_id = rm.menu_id
		left join sys_user_role ur on rm.role_id = ur.role_id
		where ur.user_id =
		#{userId}
	</select>
    <select id="selectMenuNormalAll" resultMap="BaseResultMap">
    select distinct
		m.menu_id, m.parent_id, m.menu_name, m.menu_key,m.component,m.target,m.visible,
		m.perms, m.menu_type, m.icon, m.order_num, m.create_time
		from sys_menu
		m
		where m.menu_type in ('M', 'C') and
		length(m.menu_key)>0
		order by m.order_num
  </select>
  <select id="selectMenusByUserId" parameterType="Integer" resultMap="BaseResultMap">
    select distinct m.menu_id, m.parent_id, m.menu_name,
		m.perms, m.menu_type,m.menu_key,m.component,m.target, m.icon, m.order_num,m.visible,
		m.create_time
		from sys_menu m
		left join sys_role_menu rm on m.menu_id = rm.menu_id
		left join sys_user_role ur on rm.role_id = ur.role_id
		LEFT JOIN sys_role ro on ur.role_id = ro.role_id
		where ur.user_id =
		#{userId} and m.menu_type in ('M', 'C') and
		ro.status = 0 and length(m.menu_key)>0
		order by m.order_num
  </select>
    <select id="selectMenuList" parameterType="edu.nciae.system.domain.SysMenu"
            resultMap="BaseResultMap">
        <include refid="selectMenuVo" />
        <where>
            <if test="menuKey != null and menuKey != ''">
                AND menu_key=#{menuKey}
            </if>
            <if test="menuName != null and menuName != ''">
                AND menu_name like concat('%', #{menuName}, '%')
            </if>
            <if test="visible != null and visible != ''">
                AND visible = #{visible}
            </if>
        </where>
        order by order_num
    </select>

    <insert id="insertMenu" parameterType="edu.nciae.system.domain.SysMenu">
        insert into sys_menu(
        <if test="menuId != null and menuId != 0">menu_id,</if>
        <if test="parentId != null and parentId != 0">parent_id,</if>
        <if test="menuName != null and menuName != ''">menu_name,</if>
        <if test="orderNum != null and orderNum != ''">order_num,</if>
        <if test="menuType != null and menuType != ''">menu_type,</if>
        <if test="target != null and target != ''">target,</if>
        <if test="menuKey != null and menuKey != ''">menu_key,</if>
        <if test="component != null and component != ''">component ,</if>
        <if test="visible != null">visible,</if>
        <if test="perms !=null and perms != ''">perms,</if>
        <if test="icon != null and icon != ''">icon,</if>
        <if test="remark != null and remark != ''">remark,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        )values(
        <if test="menuId != null and menuId != 0">#{menuId},</if>
        <if test="parentId != null and parentId != 0">#{parentId},</if>
        <if test="menuName != null and menuName != ''">#{menuName},</if>
        <if test="orderNum != null and orderNum != ''">#{orderNum},</if>
        <if test="menuType != null and menuType != ''">#{menuType},</if>
        <if test="target != null and target != ''">#{target},</if>
        <if test="menuKey != null and menuKey != ''">#{menuKey},</if>
        <if test="component != null and component != ''">#{component},</if>
        <if test="visible != null">#{visible},</if>
        <if test="perms !=null and perms != ''">#{perms},</if>
        <if test="icon != null and icon != ''">#{icon},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        )
    </insert>
    <update id="updateMenu" parameterType="edu.nciae.system.domain.SysMenu">
        update sys_menu
        <set>
            <if test="menuName != null and menuName != ''">menu_name = #{menuName},</if>
            <if test="parentId != null and parentId != 0">parent_id = #{parentId},</if>
            <if test="orderNum != null and orderNum != ''">order_num = #{orderNum},</if>
            <if test="menuType != null and menuType != ''">menu_type = #{menuType},</if>
            <if test="target != null and target != ''">target = #{target},</if>
            <if test="menuKey != null and menuKey != ''">menu_key = #{menuKey},</if>
            <if test="component != null">component = #{component},</if>
            <if test="visible != null">visible = #{visible},</if>
            <if test="perms !=null">perms = #{perms},</if>
            <if test="icon !=null and icon != ''">icon = #{icon},</if>
            <if test="remark != null and remark != ''">remark = #{remark},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
        </set>
        where menu_id = #{menuId}
    </update>
    <select id="checkMenuNameUnique" parameterType="edu.nciae.system.domain.SysMenu"
            resultMap="BaseResultMap">
        <include refid="selectMenuVo" />
        where menu_name=#{menuName} and parent_id = #{parentId}
    </select>
    <delete id="deleteMenuById" parameterType="Long">
		delete from sys_menu where menu_id = #{menuId} or parent_id = #{menuId}
	</delete>
</mapper>