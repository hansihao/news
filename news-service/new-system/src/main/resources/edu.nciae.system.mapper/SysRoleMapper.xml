<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.nciae.system.mapper.SysRoleMapper">
  <resultMap id="BaseResultMap" type="edu.nciae.system.domain.SysRole">
    <id column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_key" jdbcType="VARCHAR" property="roleKey" />
    <result column="role_sort" jdbcType="INTEGER" property="roleSort" />
    <result column="data_scope" jdbcType="CHAR" property="dataScope" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="del_flag" jdbcType="CHAR" property="delFlag" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>

  <sql id="selectRoleContactVo">
        select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope,
            r.status, r.del_flag, r.create_time, r.remark
        from sys_role r
	        left join sys_user_role ur on ur.role_id = r.role_id
	        left join sys_user u on u.user_id = ur.user_id
	        left join sys_dept d on u.dept_id = d.dept_id
    </sql>

  <sql id="selectRoleVo">
		select r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status, r.del_flag, r.create_time, r.remark
        from sys_role r
	</sql>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.nciae.system.domain.SysRole">
    <selectKey keyProperty="roleId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_role (role_name, role_key, role_sort, 
      data_scope, status, del_flag, 
      create_by, create_time, update_by, 
      update_time, remark)
    values (#{roleName,jdbcType=VARCHAR}, #{roleKey,jdbcType=VARCHAR}, #{roleSort,jdbcType=INTEGER}, 
      #{dataScope,jdbcType=CHAR}, #{status,jdbcType=CHAR}, #{delFlag,jdbcType=CHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="edu.nciae.system.domain.SysRole">
    update sys_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_key = #{roleKey,jdbcType=VARCHAR},
      role_sort = #{roleSort,jdbcType=INTEGER},
      data_scope = #{dataScope,jdbcType=CHAR},
      status = #{status,jdbcType=CHAR},
      del_flag = #{delFlag,jdbcType=CHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select role_id, role_name, role_key, role_sort, data_scope, status, del_flag, create_by, 
    create_time, update_by, update_time, remark
    from sys_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select role_id, role_name, role_key, role_sort, data_scope, status, del_flag, create_by, 
    create_time, update_by, update_time, remark
    from sys_role
  </select>
  <select id="selectRoleList" parameterType="edu.nciae.system.domain.SysRole" resultMap="BaseResultMap">
    <include refid="selectRoleContactVo"/>
    where r.del_flag = '0'
    <if test="roleName != null and roleName != ''">
      AND r.role_name like concat('%', #{roleName}, '%')
    </if>
    <if test="status != null and status != ''">
      AND r.status = #{status}
    </if>
    <if test="roleKey != null and roleKey != ''">
      AND r.role_key like concat('%', #{roleKey}, '%')
    </if>
    <if test="dataScope != null and dataScope != ''">
      AND r.data_scope = #{dataScope}
    </if>
<!--    <if test="params.beginTime != null and params.beginTime != ''">&lt;!&ndash; 开始时间检索 &ndash;&gt;-->
<!--      and date_format(r.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')-->
<!--    </if>-->
<!--    <if test="params.endTime != null and params.endTime != ''">&lt;!&ndash; 结束时间检索 &ndash;&gt;-->
<!--      and date_format(r.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')-->
<!--    </if>-->
  </select>

  <update id="updateRole" parameterType="edu.nciae.system.domain.SysRole">
    update sys_role
    <set>
      <if test="roleName != null and roleName != ''">role_name = #{roleName},</if>
      <if test="roleKey != null and roleKey != ''">role_key = #{roleKey},</if>
      <if test="roleSort != null and roleSort != ''">role_sort = #{roleSort},</if>
      <if test="dataScope != null and dataScope != ''">data_scope = #{dataScope},</if>
      <if test="status != null and status != ''">status = #{status},</if>
      <if test="remark != null">remark = #{remark},</if>
      <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
      update_time = sysdate()
    </set>
    where role_id = #{roleId}
  </update>

  <select id="selectRoleById" parameterType="Integer" resultMap="BaseResultMap">
    <include refid="selectRoleVo"/>
    where r.del_flag = '0' and r.role_id = #{roleId}
  </select>

  <delete id="deleteRoleByIds" parameterType="Integer">
    update sys_role set del_flag = '2' where role_id in
    <foreach collection="array" item="roleId" open="(" separator="," close=")">
      #{roleId}
    </foreach>
  </delete>
</mapper>