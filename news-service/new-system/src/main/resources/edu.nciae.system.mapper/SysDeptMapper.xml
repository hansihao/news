<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.nciae.system.mapper.SysDeptMapper">
  <resultMap id="BaseResultMap" type="edu.nciae.system.domain.SysDept">
    <id column="dept_id" jdbcType="INTEGER" property="deptId" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="ancestors" jdbcType="VARCHAR" property="ancestors" />
    <result column="dept_name" jdbcType="VARCHAR" property="deptName" />
    <result column="order_num" jdbcType="INTEGER" property="orderNum" />
    <result column="leader" jdbcType="VARCHAR" property="leader" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="del_flag" jdbcType="CHAR" property="delFlag" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

  <sql id="selectDeptVo">
        select d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.phone, d.email, d.status, d.del_flag, d.create_by, d.create_time
        from sys_dept d
    </sql>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_dept
    where dept_id = #{deptId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.nciae.system.domain.SysDept">
    <selectKey keyProperty="deptId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_dept (parent_id, ancestors, dept_name,
      order_num, leader, phone,
      email, status, del_flag, create_by,
      create_time, update_by, update_time
      )
    values (#{parentId,jdbcType=INTEGER}, #{ancestors,jdbcType=VARCHAR}, #{deptName,jdbcType=VARCHAR},
      #{orderNum,jdbcType=INTEGER}, #{leader,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{delFlag,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="edu.nciae.system.domain.SysDept">
    update sys_dept
    set parent_id = #{parentId,jdbcType=INTEGER},
      ancestors = #{ancestors,jdbcType=VARCHAR},
      dept_name = #{deptName,jdbcType=VARCHAR},
      order_num = #{orderNum,jdbcType=INTEGER},
      leader = #{leader,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      del_flag = #{delFlag,jdbcType=CHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where dept_id = #{deptId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select dept_id, parent_id, ancestors, dept_name, order_num, leader, phone, email,
    status, del_flag, create_by, create_time, update_by, update_time
    from sys_dept
    where dept_id = #{deptId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select dept_id, parent_id, ancestors, dept_name, order_num, leader, phone, email,
    status, del_flag, create_by, create_time, update_by, update_time
    from sys_dept
  </select>
  <select id="selectDeptList" parameterType="edu.nciae.system.domain.SysDept" resultMap="BaseResultMap">
    <include refid="selectDeptVo"/>
    where d.del_flag = '0'
    <if test="parentId != null and parentId != 0">
      AND parent_id = #{parentId}
    </if>
    <if test="deptName != null and deptName != ''">
      AND dept_name like concat('%', #{deptName}, '%')
    </if>
    <if test="status != null and status != ''">
      AND status = #{status}
    </if>
    order by d.order_num
  </select>
  <select id="selectDeptById" parameterType="Integer" resultMap="BaseResultMap">
		select d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.phone, d.email, d.status,
			(select dept_name from sys_dept where dept_id = d.parent_id) parent_name
		from sys_dept d
		where d.dept_id = #{deptId}
	</select>

  <select id="checkDeptNameUnique" resultMap="BaseResultMap">
    <include refid="selectDeptVo"/>
    where dept_name=#{deptName} and parent_id = #{parentId}
  </select>
  <insert id="insertDept" parameterType="edu.nciae.system.domain.SysDept">
    insert into sys_dept(
    <if test="deptId != null and deptId != 0">dept_id,</if>
    <if test="parentId != null and parentId != 0">parent_id,</if>
    <if test="deptName != null and deptName != ''">dept_name,</if>
    <if test="ancestors != null and ancestors != ''">ancestors,</if>
    <if test="orderNum != null and orderNum != ''">order_num,</if>
    <if test="leader != null and leader != ''">leader,</if>
    <if test="phone != null and phone != ''">phone,</if>
    <if test="email != null and email != ''">email,</if>
    <if test="status != null">status,</if>
    <if test="createBy != null and createBy != ''">create_by,</if>
    )values(
    <if test="deptId != null and deptId != 0">#{deptId},</if>
    <if test="parentId != null and parentId != 0">#{parentId},</if>
    <if test="deptName != null and deptName != ''">#{deptName},</if>
    <if test="ancestors != null and ancestors != ''">#{ancestors},</if>
    <if test="orderNum != null and orderNum != ''">#{orderNum},</if>
    <if test="leader != null and leader != ''">#{leader},</if>
    <if test="phone != null and phone != ''">#{phone},</if>
    <if test="email != null and email != ''">#{email},</if>
    <if test="status != null">#{status},</if>
    <if test="createBy != null and createBy != ''">#{createBy},</if>
    )
  </insert>
  <update id="updateDept" parameterType="edu.nciae.system.domain.SysDept">
    update sys_dept
    <set>
      <if test="parentId != null and parentId != 0">parent_id = #{parentId},</if>
      <if test="deptName != null and deptName != ''">dept_name = #{deptName},</if>
      <if test="ancestors != null and ancestors != ''">ancestors = #{ancestors},</if>
      <if test="orderNum != null and orderNum != ''">order_num = #{orderNum},</if>
      <if test="leader != null">leader = #{leader},</if>
      <if test="phone != null">phone = #{phone},</if>
      <if test="email != null">email = #{email},</if>
      <if test="status != null and status != ''">status = #{status},</if>
      <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
    </set>
    where dept_id = #{deptId}
  </update>
  <update id="updateDeptStatus" parameterType="edu.nciae.system.domain.SysDept">
    update sys_dept
    <set>
      <if test="status != null and status != ''">status = #{status},</if>
      <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
      update_time = sysdate()
    </set>
    where dept_id in (${ancestors})
  </update>
  <select id="selectChildrenDeptById" parameterType="Integer" resultMap="BaseResultMap">
    select * from sys_dept
    <where>
      FIND_IN_SET(#{id},ancestors)
    </where>
  </select>
  <select id="selectRoleDeptIds" parameterType="Integer" resultType="String">
		select d.dept_id
		from sys_dept d
			left join sys_role_dept rd on d.dept_id = rd.dept_id
		where d.del_flag = '0' and rd.role_id = #{roleId}
		order by d.parent_id, d.order_num
	</select>

  <update id="updateDeptChildren" parameterType="java.util.List">
    update sys_dept set ancestors =
    <foreach collection="depts" item="item" index="index"
             separator=" " open="case dept_id" close="end">
      when #{item.deptId} then #{item.ancestors}
    </foreach>
    where dept_id in
    <foreach collection="depts" item="item" index="index"
             separator="," open="(" close=")">
      #{item.deptId}
    </foreach>
  </update>
  <delete id="deleteDeptById" parameterType="Integer">
		update sys_dept set del_flag = '2' where dept_id = #{deptId}
	</delete>
</mapper>